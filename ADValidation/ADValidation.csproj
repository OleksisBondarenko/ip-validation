<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <!-- Use full path or ensure directory exists -->
        <SpaRoot>$(MSBuildProjectDirectory)\..\client-validation\</SpaRoot>
        <ExcludeAngularBuild>false</ExcludeAngularBuild>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <AngularBuildOutputPath>$(MSBuildProjectDirectory)\wwwroot\</AngularBuildOutputPath>
    </PropertyGroup>

    <!-- Your existing PackageReferences -->
    <ItemGroup>
        <!-- Your existing PackageReferences -->
        <PackageReference Include="AspNetCore.Proxy" Version="4.5.0" />
        <PackageReference Include="AutoMapper" Version="14.0.0" />
        <PackageReference Include="HtmlAgilityPack" Version="1.11.71" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.15" />
        <PackageReference Include="Microsoft.AspNetCore.Cors" Version="2.3.0" />
        <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.3.1" />
        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="8.0.15" />
        <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.6" />
        <PackageReference Include="Microsoft.Data.SqlClient" Version="6.0.0-preview3.24332.3" />
        <PackageReference Include="Microsoft.Data.Sqlite" Version="9.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="9.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="9.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging" Version="9.0.0" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
        <PackageReference Include="System.Data.SqlClient" Version="4.9.0" />
        <PackageReference Include="System.DirectoryServices" Version="8.0.0" />
        <PackageReference Include="System.DirectoryServices.Protocols" Version="8.0.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Copy all files from the assets folder to the output directory -->
        <None Include="config\**\*">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <ItemGroup>
        <!-- Copy all files from the assets folder to the output directory -->
        <None Include="wwwroot\**\*">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    
<!--    <Target Name="ValidateAngularDirectory" BeforeTargets="Build">-->
<!--        <Error Condition="!Exists('$(SpaRoot)')"-->
<!--               Text="Angular directory $(SpaRoot) does not exist. Please create it and initialize an Angular project." />-->
<!--        <Error Condition="!Exists('$(SpaRoot)package.json')"-->
<!--               Text="package.json not found in $(SpaRoot). Is this an Angular project directory?" />-->
<!--    </Target>-->

<!--    <Target Name="EnsureNodeEnv" BeforeTargets="Build">-->
<!--        &lt;!&ndash; Check Node.js is installed &ndash;&gt;-->
<!--        <Exec Command="node &#45;&#45;version" ContinueOnError="true">-->
<!--            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />-->
<!--        </Exec>-->
<!--        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build this project" />-->

<!--        &lt;!&ndash; Install dependencies &ndash;&gt;-->
<!--        <Exec Command="npm install" WorkingDirectory="$(SpaRoot)"-->
<!--              Condition="Exists('$(SpaRoot)')" />-->
<!--    </Target>-->

<!--    <Target Name="BuildAngular" AfterTargets="Build" Condition="Exists('$(SpaRoot)')">-->
<!--        &lt;!&ndash; Clean wwwroot first &ndash;&gt;-->
<!--        <RemoveDir Directories="$(AngularBuildOutputPath)" />-->

<!--        &lt;!&ndash; Build Angular directly to wwwroot &ndash;&gt;-->
<!--        <Exec Command="npm run build &#45;&#45; &#45;&#45;output-path $(AngularBuildOutputPath)"-->
<!--              WorkingDirectory="$(SpaRoot)"-->
<!--              Condition="Exists('$(SpaRoot)package.json')" />-->
<!--    </Target>-->

<!--    <Target Name="PublishAngular" BeforeTargets="Build" Condition=" '$(ExcludeAngularBuild)' == 'false' And Exists('$(SpaRoot)') ">-->
<!--        &lt;!&ndash; Production build directly to wwwroot &ndash;&gt;-->
<!--        <Exec Command="npm run build &#45;&#45; &#45;&#45;output-path $(AngularBuildOutputPath) "-->
<!--              WorkingDirectory="$(SpaRoot)"-->
<!--              Condition="Exists('$(SpaRoot)package.json')" />-->

<!--        &lt;!&ndash; Ensure wwwroot is included in publish &ndash;&gt;-->
<!--        <ItemGroup>-->
<!--            <Content Include="wwwroot\**" />-->
<!--        </ItemGroup>-->
<!--    </Target>-->

<!--    <Target Name="CleanAngular" BeforeTargets="Clean">-->
<!--        <RemoveDir Directories="$(SpaRoot)dist" Condition="Exists('$(SpaRoot)')" />-->
<!--        <RemoveDir Directories="$(SpaRoot)node_modules" Condition="Exists('$(SpaRoot)')" />-->
<!--&lt;!&ndash;        <RemoveDir Directories="wwwroot" />&ndash;&gt;-->
<!--    </Target>-->

</Project>